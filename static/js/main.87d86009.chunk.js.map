{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","addTask","useState","text","setText","day","setDay","className","onSubmit","e","preventDefault","isDone","htmlFor","id","name","type","placeholder","value","onChange","target","Button","color","toggleShow","style","backgroundColor","onClick","Header","title","showAddTask","Task","task","deleteTask","toggleDone","onDoubleClick","cursor","Tasks","tasks","map","App","setTasks","setShowAddTask","Math","floor","random","newTask","length","deletedTaskId","filter","toggleDoneId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87d86009.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addTask({ text, day, isDone: false });\r\n\r\n    setText('');\r\n    setDay('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"task\">Task</label>\r\n        <input\r\n          id=\"task\"\r\n          name=\"text\"\r\n          type=\"text\"\r\n          placeholder=\"AddTask\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"day\">Day & Time</label>\r\n        <input\r\n          id=\"day\"\r\n          name=\"day\"\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\n\r\nconst Button = ({ color, text, toggleShow }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={toggleShow}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n//import PropTypes from 'prop-types';\r\n\r\nconst Header = ({ title, showAddTask, toggleShow }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAddTask ? 'red' : 'purple'}\r\n        text={showAddTask ? 'Close Add Task Bar' : 'Show Add Task Bar'}\r\n        toggleShow={toggleShow}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\n// Header.defaultProps = {\r\n//   title: 'Task Tracker',\r\n// };\r\n\r\n// Header.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, deleteTask, toggleDone }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.isDone ? 'done' : ''}`}\r\n      onDoubleClick={() => toggleDone(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => deleteTask(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task';\r\n\r\nconst Tasks = ({ tasks, deleteTask, toggleDone }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          deleteTask={deleteTask}\r\n          toggleDone={toggleDone}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\nimport './App.css';\r\nimport AddTask from './components/AddTask';\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 1,\r\n      text: 'Study React Pre-Class Notes',\r\n      day: 'Feb 5th at 2:30pm',\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Feed the Dog',\r\n      day: 'Feb 6th at 1:30pm',\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Attend in-Class',\r\n      day: 'Feb 7th at 20:00pm',\r\n      isDone: false,\r\n    },\r\n  ]);\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 100) + 1;\r\n    const newTask = { id, ...task };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = (deletedTaskId) => {\r\n    setTasks(tasks.filter((task) => task.id !== deletedTaskId));\r\n  };\r\n\r\n  // Toggle Done\r\n  const toggleDone = (toggleDoneId) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === toggleDoneId ? { ...task, isDone: !task.isDone } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  // Toggle Show\r\n  const toggleShow = () => setShowAddTask(!showAddTask);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header\r\n        title=\"Task Tracker\"\r\n        showAddTask={showAddTask}\r\n        toggleShow={toggleShow}\r\n      />\r\n      {showAddTask && <AddTask addTask={addTask} />}\r\n      {tasks.length > 0 ? (\r\n        <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} />\r\n      ) : (\r\n        'No Tasks to Show'\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}